*org-roam.txt*            For NVIM v0.9.2           Last change: 2024 April 06

==============================================================================
Table of Contents                                 *org-roam-table-of-contents*

1. Getting Started                                  |org-roam-getting-started|
  - Installation                       |org-roam-getting-started-installation|
2. Settings                                                |org-roam-settings|
3. Bindings                                                |org-roam-bindings|
  - Coming from Emacs                    |org-roam-bindings-coming-from-emacs|
4. User Interface                                    |org-roam-user-interface|
  - Org Roam Buffer                  |org-roam-user-interface-org-roam-buffer|
5. API                                                          |org-roam-api|
6. Changelog                                              |org-roam-changelog|
7. Credits                                                  |org-roam-credits|

==============================================================================
1. Getting Started                                  *org-roam-getting-started*

Port of Org-roam <https://www.orgroam.com/> to neovim using nvim-orgmode
<https://github.com/nvim-orgmode/orgmode>.


INSTALLATION                           *org-roam-getting-started-installation*

This plugin depends on nvim-orgmode/orgmode
<https://github.com/nvim-orgmode/orgmode> @ _commit 4874e72_.


LAZY.NVIM ~

>lua
    {
      "chipsenkbeil/org-roam.nvim",
      dependencies = { 
        { 
          "nvim-orgmode/orgmode", 
          commit = "4874e72ab434c440e955b7bc4d9a2df884370137",
        },
      },
      config = function()
        require("org-roam").setup({
          directory = "~/orgfiles",
        })
      end
    }
<


PACKER.NVIM ~

>lua
    use {
      "chipsenkbeil/org-roam.nvim",
      requires = { 
        { 
          "nvim-orgmode/orgmode",
          commit = "4874e72ab434c440e955b7bc4d9a2df884370137",
        },
      },
      config = function()
        require("org-roam"):setup({
          directory = "~/orgfiles",
        })
      end
    }
<


==============================================================================
2. Settings                                                *org-roam-settings*

TODO


==============================================================================
3. Bindings                                                *org-roam-bindings*

  Name                       Keybinding   Description
  -------------------------- ------------ -------------------------------------------------------------------------
  capture                    <Leader>nc   Opens org-roam capture window.
  complete_(atpoint)         <Leader>n/   Completes the node under cursor.
  find_(node)                <Leader>nf   Finds node and moves to it, creating it if it does not exist.
  insert_(node)              <Leader>ni   Inserts node at cursor position, creating it if it does not exist.
  quickfix_(backlinks)       <Leader>nq   Opens the quickfix menu for backlinks to the current node under cursor.
  toggle_(roambuffer)        <Leader>nl   Toggles the org-roam node-view buffer for the node under cursor.
  toggle_(roambufferfixed)   <Leader>nb   Toggles a fixed org-roam node-view buffer for a selected node.
Bindings can be changed during configuration by overwriting them within the
`bindings` table:

>lua
    require("org-roam"):setup({
      -- ...
      bindings = {
        capture = "<LocalLeader>nc",
      },
    })
<

To disable all bindings, set the `bindings` field to `false`:

>lua
    require("org-roam"):setup({
      -- ...
      bindings = false,
    })
<


COMING FROM EMACS                        *org-roam-bindings-coming-from-emacs*

Want to have bindings similar to Emacs's Org Roam <https://www.orgroam.com/>?
Here is a recommended setup you can use to leverage `C-c`

>lua
    require("org-roam"):setup({
      -- ...
      bindings = {
        capture                  = "<C-c>nc",
        complete_at_point        = "<M-/>",
        find_node                = "<C-c>nf",
        insert_node              = "<C-c>ni",
        quickfix_backlinks       = "<C-c>nq",
        toggle_roam_buffer       = "<C-c>nl",
        toggle_roam_buffer_fixed = "<C-c>nb",
      },
    })
<

Keep in mind that nvim-orgmode <https://github.com/nvim-orgmode/orgmode> maps
`C-c` to closing a capture window, so you'll want to rebind it:

>lua
    -- Override `org_capture_finalize` mapping to make org-roam mappings work in capture window
    require("orgmode").setup({
      mappings = {
        capture = {
          -- Behave like Emacs' orgmode capture
          org_capture_finalize = "<C-c><C-c>",
        }
      }
    })
<


==============================================================================
4. User Interface                                    *org-roam-user-interface*


ORG ROAM BUFFER                      *org-roam-user-interface-org-roam-buffer*

When within the org-roam buffer, you can navigate around like normal with a
couple of specific bindings available:

- Press `<Enter>` on a link to navigate to it in another window.
- Press `<Tab>` to expand or collapse a preview of the content of a
    backlink, reference link, or unlinked reference.


==============================================================================
5. API                                                          *org-roam-api*

TODO


==============================================================================
6. Changelog                                              *org-roam-changelog*

TODO


==============================================================================
7. Credits                                                  *org-roam-credits*

- Kristijan Husak <https://github.com/kristijanhusak> for creating nvim-orgmode <https://github.com/nvim-orgmode/orgmode> (the backbone of functionality in neovim that we leverage)
- Jethro Kuan <https://github.com/jethrokuan> for creating Org Roam (Emacs) <https://github.com/org-roam/org-roam> (the original implementation whose design we copied)
- Daniel Mendler <https://github.com/minad> for creating vertico.el <https://github.com/minad/vertico> (inspiration for ourg selection dialog)
- Srinesh Nisala <https://github.com/s1n7ax> for creating nvim-window-picker <https://github.com/s1n7ax/nvim-window-picker> (integrated directly for our window selection)
- Dheepak Krishnamurthy <https://github.com/kdheepak> for creating panvimdoc <https://github.com/kdheepak/panvimdoc> (used to create our vimdoc)

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
